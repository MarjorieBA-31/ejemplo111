<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EZAAU4QCgZmBYMjAIAA0/9k=
</value>
  </data>
</root>